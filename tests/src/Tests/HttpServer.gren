module Tests.HttpServer exposing (tests)

import Dict
import Expect
import Test exposing (describe, test)
import HttpServer exposing (Method(..))
import Url

tests =
    [ describe "toRequest"
        [ test "turns record with node data into a gren node Request" <| \_ ->
            { urlProtocol = "http"
            , urlHost = "blaix.com"
            , urlPort = "1234"
            , urlPath = "/hot/dog"
            , urlQuery = "abc"
            , urlFragment = "frag"
            , headers = ["one", "1", "two", "2", "three", "3"]
            , method = "DELETE"
            , body = "the body"
            }
                |> HttpServer.toRequest
                |> Expect.equal
                    { method = DELETE
                    , body = "the body"
                    , url =
                        Url.fromString "http://blaix.com:1234/hot/dog?abc#frag"
                            |> Maybe.withDefault
                                { protocol = Url.Http
                                , host = "fail.fail"
                                , port_ = Nothing
                                , path = "/fail"
                                , query = Nothing
                                , fragment = Nothing
                                }
                    , headers = 
                        Dict.fromArray
                            [ { key = "one", value = "1" }
                            , { key = "two", value = "2" }
                            , { key = "three", value = "3" }
                            ]
                    }
        ]
    ]